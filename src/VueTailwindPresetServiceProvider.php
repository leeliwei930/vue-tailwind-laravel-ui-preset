<?php

namespace Techrino\VueTailwindLaravelUIPreset;
use Illuminate\Support\Facades\Artisan;
use Laravel\Ui\UiCommand;

class  VueTailwindPresetServiceProvider  extends \Illuminate\Support\ServiceProvider {


    private $presetOptions = [];


    public function boot()
    {

        $this->presetOptions =   [
            'vue-tailwind-preset' => $this->registerVueTailwindPreset(),
            'vue-tailwind-eslint-preset' => $this->registerVueTailwindESLintPreset(),
            'vue-tailwind-airbnb-eslint-preset' => $this->registerVueTailwindESLintAirbnb()
        ];

    }

    public function register()
    {
        parent::register(); // TODO: Change the autogenerated stub

        UiCommand::macro('vue-tailwind', function (UiCommand $command) {



            $input = $this->prompt($command);



            $command->info("Perform scaffolding on ". $input['stack']);

            $exitCode = Artisan::call("vendor:publish", [
                '--tag' => $input['stack']
            ]);

            if($exitCode == 0){

                foreach ($this->presetOptions[$input['stack']] as $src =>$dest){
                    $command->line("Copy $src to $dest" );
                }
                file_put_contents(
                    base_path('routes/web.php'),
                    file_get_contents(__DIR__.'/stubs/routes.stub'),
                    FILE_APPEND
                );

                $command->info("Initialize Completed");
                $command->info("Please run npm install or yarn to install all the packages.");
            }
        });
    }

    public function prompt(UiCommand  $command){

        $stack = $command->choice("Select a frontend stack", [
            "vue-tailwind-preset" => "Vue + Tailwind CSS",
            "vue-tailwind-eslint-preset" => "Vue + Tailwind CSS + ESLint",
            "vue-tailwind-airbnb-eslint-preset" => "Vue + Tailwind CSS + airbnb ESLint",
        ]);


        return [
            "stack" => $stack,
        ];

    }


    public function registerVueTailwindPreset(){

        $scaffold = [
            __DIR__ . '/tests' => base_path('cypress/integration/vue-tailwind-laravel-ui-preset'),
            __DIR__ . '/public' => public_path('presets/vue-tailwind'),

            __DIR__ . '/presets/vue-tailwind/css' => resource_path('presets/vue-tailwind-preset/css'),
            __DIR__ . '/presets/vue-tailwind/views' => resource_path('views/presets/vue-tailwind-preset'),
            __DIR__ . '/presets/vue-tailwind/vue' => resource_path('presets/vue-tailwind-preset/vue'),
            __DIR__ . '/presets/vue-tailwind/postcss.config.js' => base_path('postcss.config.js'),
            __DIR__ . '/presets/vue-tailwind/webpack.mix.js' => base_path('webpack.mix.js'),
            __DIR__ . '/presets/vue-tailwind/webpack.config.js' => base_path('webpack.config.js'),
            __DIR__ . '/presets/vue-tailwind/tailwind.config.js' => base_path('tailwind.config.js'),
            __DIR__ . '/presets/vue-tailwind/.babelrc' => base_path('.babelrc'),
            __DIR__ . '/presets/vue-tailwind/package.json' => base_path('package.json'),
            __DIR__ . '/presets/vue-tailwind/package.json' => base_path('package.json'),
        ];

        $this->publishes($scaffold, "vue-tailwind-preset");

        return $scaffold;
    }



    public function registerVueTailwindESLintPreset(){


        $scaffold = [
            __DIR__ . '/tests' => base_path('cypress/integration/vue-tailwind-laravel-ui-preset'),
            __DIR__ . '/public' => public_path('presets/vue-tailwind'),

            __DIR__ . '/presets/vue-tailwind/css' => resource_path('presets/vue-tailwind-preset/css'),
            __DIR__ . '/presets/vue-tailwind/views' => resource_path('views/presets/vue-tailwind-preset'),
            __DIR__ . '/presets/vue-tailwind/vue' => resource_path('presets/vue-tailwind-preset/vue'),
            __DIR__ . '/presets/vue-tailwind/postcss.config.js' => base_path('postcss.config.js'),
            __DIR__ . '/presets/vue-tailwind-eslint/webpack.mix.js' => base_path('webpack.mix.js'),
            __DIR__ . '/presets/vue-tailwind-eslint/webpack.config.js' => base_path('webpack.config.js'),
            __DIR__ . '/presets/vue-tailwind/tailwind.config.js' => base_path('tailwind.config.js'),
            __DIR__ . '/presets/vue-tailwind/.babelrc' => base_path('.babelrc'),
            __DIR__ . '/presets/vue-tailwind-eslint/.eslintignore' => base_path('.eslintignore'),
            __DIR__ . '/presets/vue-tailwind-eslint/.eslintrc.json' => base_path('.eslintrc.json'),
            __DIR__ . '/presets/vue-tailwind-eslint/package.json' => base_path('package.json'),
        ];
        $this->publishes($scaffold, "vue-tailwind-eslint-preset");
        return $scaffold;
    }


    public function registerVueTailwindESLintAirbnb(){
        $scaffold = [
            __DIR__ . '/tests' => base_path('cypress/integration/vue-tailwind-laravel-ui-preset'),
            __DIR__ . '/public' => public_path('presets/vue-tailwind'),

            __DIR__ . '/presets/vue-tailwind/css' => resource_path('presets/vue-tailwind-preset/css'),
            __DIR__ . '/presets/vue-tailwind/views' => resource_path('views/presets/vue-tailwind-preset'),
            __DIR__ . '/presets/vue-tailwind/vue' => resource_path('presets/vue-tailwind-preset/vue'),
            __DIR__ . '/presets/vue-tailwind/postcss.config.js' => base_path('postcss.config.js'),
            __DIR__ . '/presets/vue-tailwind-eslint/webpack.mix.js' => base_path('webpack.mix.js'),
            __DIR__ . '/presets/vue-tailwind-eslint/webpack.config.js' => base_path('webpack.config.js'),
            __DIR__ . '/presets/vue-tailwind/tailwind.config.js' => base_path('tailwind.config.js'),
            __DIR__ . '/presets/vue-tailwind/.babelrc' => base_path('.babelrc'),
            __DIR__ . '/presets/vue-tailwind-airbnb-eslint/.eslintignore' => base_path('.eslintignore'),
            __DIR__ . '/presets/vue-tailwind-airbnb-eslint/.eslintrc.json' => base_path('.eslintrc.json'),
            __DIR__ . '/presets/vue-tailwind-airbnb-eslint/package.json' => base_path('package.json'),
        ];
        $this->publishes($scaffold, "vue-tailwind-airbnb-eslint-preset");

        return $scaffold;
    }
}
